// <auto-generated />
using System;
using DataAccessLogic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccessLogic.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20211104215537_AnotherMigragion")]
    partial class AnotherMigragion
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Models.Customer", b =>
                {
                    b.Property<int>("CustID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("customer_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("cust_address");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("cust_email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("cust_name");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("cust_phone_number");

                    b.HasKey("CustID")
                        .HasName("PK__customer__A1B71F90DD81F00C");

                    b.ToTable("customer");
                });

            modelBuilder.Entity("Models.LineItems", b =>
                {
                    b.Property<int>("LineItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("lineItem_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OrderNumber")
                        .HasColumnType("int")
                        .HasColumnName("order_number");

                    b.Property<int?>("OrderNumber1")
                        .HasColumnType("int");

                    b.Property<int>("ProductID")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("lineItem_quantity");

                    b.HasKey("LineItemId")
                        .HasName("lineItem_id");

                    b.HasIndex("OrderNumber1");

                    b.HasIndex("ProductID");

                    b.ToTable("lineItem");
                });

            modelBuilder.Entity("Models.Order", b =>
                {
                    b.Property<int>("OrderNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("order_number")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustID")
                        .HasColumnType("int")
                        .HasColumnName("customer_id");

                    b.Property<int?>("CustomerCustID")
                        .HasColumnType("int");

                    b.Property<int>("StoreID")
                        .HasColumnType("int")
                        .HasColumnName("store_id");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("order_total_price");

                    b.HasKey("OrderNumber")
                        .HasName("PK__orders__730E34DE09B91646");

                    b.HasIndex("CustomerCustID");

                    b.HasIndex("StoreID");

                    b.ToTable("orders");
                });

            modelBuilder.Entity("Models.Product", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("product_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("product_description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("product_name");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("product_price");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("product_quantity");

                    b.Property<int>("StoreID")
                        .HasColumnType("int")
                        .HasColumnName("store_id");

                    b.HasKey("ProductID");

                    b.HasIndex("StoreID");

                    b.ToTable("product");
                });

            modelBuilder.Entity("Models.Store", b =>
                {
                    b.Property<int>("StoreID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("store_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("store_address");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("store_name");

                    b.HasKey("StoreID");

                    b.ToTable("store");
                });

            modelBuilder.Entity("Models.LineItems", b =>
                {
                    b.HasOne("Models.Order", null)
                        .WithMany("Items")
                        .HasForeignKey("OrderNumber1");

                    b.HasOne("Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Models.Order", b =>
                {
                    b.HasOne("Models.Customer", null)
                        .WithMany("Orders")
                        .HasForeignKey("CustomerCustID");

                    b.HasOne("Models.Store", "Store")
                        .WithMany("Orders")
                        .HasForeignKey("StoreID")
                        .HasConstraintName("FK__orders__store_id__4B7734FF")
                        .IsRequired();

                    b.Navigation("Store");
                });

            modelBuilder.Entity("Models.Product", b =>
                {
                    b.HasOne("Models.Store", null)
                        .WithMany("Products")
                        .HasForeignKey("StoreID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Models.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Models.Order", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("Models.Store", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
